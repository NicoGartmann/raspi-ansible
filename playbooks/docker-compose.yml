---
- name: Docker Compose Services bereitstellen
  hosts: raspberrypi
  become: true

  vars:
    repo_url: "https://github.com/NicoGartmann/docker-config.git"
    repo_dest: "/opt/services"

  vars_files:
    - ../group_vars/raspberrypi/vault.yml

  tasks:
    - name: Git-Repo mit Compose-Datei klonen/aktualisieren
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dest }}"
        version: main
        force: yes

    - name: Twingate Variablen in .env hinzuf√ºgen
      ansible.builtin.lineinfile:
        path: "{{ repo_dest }}/.env"
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
        create: yes
        owner: root
        group: root
        mode: "0600"
      loop:
        - { key: "TWINGATE_NETWORK", value: "{{ vault_twingate_network }}" }
        - { key: "TWINGATE_ACCESS_TOKEN", value: "{{ vault_twingate_access }}" }
        - { key: "TWINGATE_REFRESH_TOKEN", value: "{{ vault_twingate_refresh }}" }

    - name: Docker Compose Pull (Updates holen)
      ansible.builtin.command:
        cmd: docker compose pull
        chdir: "{{ repo_dest }}"
      register: compose_pull
      changed_when: "'Downloaded' in compose_pull.stdout"

    - name: Docker Compose up (Start/Update der Container)
      ansible.builtin.command:
        cmd: docker compose up -d
        chdir: "{{ repo_dest }}"
      register: compose_up
      changed_when: "'Creating' in compose_up.stdout or 'Recreating' in compose_up.stdout"

